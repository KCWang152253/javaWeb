


server:
  port: 8081


#数据库的配置
spring:
  application:
    name: webdemo01
  redis:
    host: localhost
    port: 6379
#    password: kcwang
    database: 0
    lettuce:
      pool:
        max-idle: 16
        max-active: 32
        min-idle: 8
  datasource:
    driver-class-name: com.mysql.cj.jdbc.Driver
    #?serverTimezone=UTC解决时区的报错
    url: jdbc:mysql://localhost:3306/mydb2?serverTimezone=UTC&useUnicode=true&characterEncoding=utf-8
    username: root
    password: kcwang
    #    开启druid驱动
    type: com.alibaba.druid.pool.DruidDataSource
    druid:
      filter:
        config:
          enabled: true

      #      初始化建立物理连接个数
      initial-size: 3
      #      最凶奥连接池
      min-idle: 3
      #      连接池最大连接数
      max-active: 20
      # 获取连接时最大等待时间，单位毫秒
      max-wait: 60000
      # 申请连接的时候检测，如果空闲时间大于timeBetweenEvictionRunsMillis，执行validationQuery检测连接是否有效。
      test-while-idle: true
      # 既作为检测的间隔时间又作为testWhileIdel执行的依据
      time-between-connect-error-millis: 60000
      # 销毁线程时检测当前连接的最后活动时间和当前时间差大于该值时，关闭当前连接
      min-evictable-idle-time-millis: 30000
      # 用来检测连接是否有效的sql 必须是一个查询语句
      # mysql中为 select 'x'
      # oracle中为 select 1 from dual
      validation-query: select 'x'
      # 申请连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-borrow: false
      # 归还连接时会执行validationQuery检测连接是否有效,开启会降低性能,默认为true
      test-on-return: false
      # 是否缓存preparedStatement,mysql5.5+建议开启
      pool-prepared-statements: true
      # 当值大于0时poolPreparedStatements会自动修改为true
      max-pool-prepared-statement-per-connection-size: 20
      # 合并多个DruidDataSource的监控数据
      use-global-data-source-stat: false
      # 配置扩展插件
      filters: stat,wall,slf4j
      # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
      connect-properties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=2000
      # 定时输出统计信息到日志中，并每次输出日志会导致清零（reset）连接池相关的计数器。
      time-between-log-stats-millis: 300000
      # 配置DruidStatFilter
      web-stat-filter:
        enabled: true
        url-pattern: '/*'
        exclusions: '*.js,*.gif,*.jpg,*.bmp,*.png,*.css,*.ico,/druid/*'
      # 配置DruidStatViewServlet
      stat-view-servlet:
        # 是否启用StatViewServlet（监控页面）默认值为false（考虑到安全问题默认并未启动，如需启用建议设置密码或白名单以保障安全）
        url-pattern: '/druid/*'
        # 禁用HTML页面上的“Reset All”功能
        reset-enable: false
        #        # druid登录名
        login-username: admin
        # 登录密码
        login-password: admin
        enabled: true
#        数据库密码加密公钥
#      connection-properties: config.decrypt=true;config.decrypt.key=MFwwDQYJKoZIhvcNAQEBBQADSwAwSAJBAOuIUu/iVnxlfq9EYCmu9CVVEYrjwMjI8/DZ7zMwVnLov9cNxRnK3TV94SDL6p5C0EjFx1NKW5ntJwVoe8jZxV8CAwEAAQ==

management:
  server:
    # 这个端口是prometheus来抓取的端口, 也就是业务方把监控数据暴露的端口
    port: 9001
  #  开启 actator 服务
  endpoints:
    web:
      exposure:
        # 这里是把springboot支持的web相关的监控都吐出来, 包括JVM等监控数据
        include: '*'
  # 暴露 metrics 端口
  endpoint:
    metrics:
      enabled: true
    #    配置 prometheus 服务
    prometheus:
      enabled: true


  metrics:
    export:
      prometheus:
        enabled: true

    tags:
      application: ${spring.application.name}






# mybatis-plus的配置   混用mybatis和mybatisplus 可能会出现InvalidBoundStatement错误  删除Mybatis的相关配置，包括config类。MybatisPlus实际上集成了Mybatis，只需正确配置MybatisPlus即可避免冲
mybatis-plus:
  mapperLocations:
  configuration:
    #   sql日志显示，这里使用标准显示
    log-impl: org.apache.ibatis.logging.stdout.StdOutImpl
    #  数据库中如果有类似 如  user_name 等命名，会将 _后的字母大写，这里是为了和实体类对应
    map-underscore-to-camel-case: true
    #  配置mapper文件的路径
    # 接口的配置文件的位置 我这里接口配置文件是UserMapper.xml
  mapper-locations: classpath:mybatis/mapper/*.xml,classpath:mapper/**/*.xml,classpath:/mybatis-plus/*.xml
    # 给pojo实体类起别名
  type-aliases-package: com.kc.webdemo01.bean




#pageHelper配置分页（官网推荐配置）
pagehelper:
  helperDialect: mysql
  reasonable: true
  supportMethodsArguments: true
  params: count=countSql





# nacos相关配置
nacos:
  discovery:
    server-addr: 127.0.0.1:8848
    #是否将本应用注册到nacos服务列表，默认是false
    auto-register: true
    #本服务所属的命名空间的ID，默认是空，也就是public
    namespace: c91a7f69-cefc-4ee3-8350-07ab87affd05
    register:
      #本服务是否接受外部的请求，默认true
      enabled: true
      #本服务要注册到命名空间下的哪个组，默认DEFAULT_GROUP
      group-name: DEFAULT_GROUP
      #服务的名称，会展示在nacos服务列表，要求唯一，可以不写，默认是spring.application.name的值
      service-name:


logging:
  config: classpath:logback-spring.xml
  file-location: /Users/kcwang/elk


rocketmq:
  name-server: localhost:9876;  #nameserver IP地址
  producer:
    group: TEST_GROUP # 指定group
    send-message-timeout: 3000 # 消息发送超时时长，默认3s
    retry-times-when-send-failed: 3 # 同步发送消息失败重试次数，默认2
    retry-times-when-send-async-failed: 3 # 异步发送消息失败重试次数，默认2




#openFeign的默认的http调用方式是JDK原生HttpURLConnection，缺乏线程池和自定义调用参数等设置。可以选择第三方客户端HttpClient，如果需要使用HttpClient做服务调用的客户端，需要引入Httpclient依赖。
# 开启HttpClient
feign:
  # 禁用OkHttp
  okhttp:
    enabled: false
  # 使用HttpClient 5（Apache HttpClient 5）
  httpclient:
    hc5:
      enabled: false
  httpclien:
    enabled: true

#Ribbon start  openFeign集成了Ribbon，默认支持Ribbon进行负责均衡，直接在properties文件中加上对应参数即可。
#请求时间5秒
ribbon:
  ReadTimeout: 5000
  #连接时间5秒
  ConnectTimeout: 5000
